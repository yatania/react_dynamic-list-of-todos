{"version":3,"sources":["components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","filterByTitle","selectedStatus","todoId","selectUser","userId","setState","props","handleTodosByTitle","event","target","value","handleTodosByStatus","makeFilteredTodos","todos","filter","todo","title","includes","completed","this","filteredTodos","className","onChange","map","itemClass","cn","key","id","type","defaultChecked","onClick","React","Component","defaultProps","PropTypes","arrayOf","shape","request","url","fetch","then","response","json","serverResponse","data","catch","error","CurrentUser","user","loadData","prevProps","clearUserInfo","name","adress","phone","App","selectedUserId","clearUser","a","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f226c5c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  state = {\n    filterByTitle: '',\n    selectedStatus: 'all',\n    todoId: 0,\n  }\n\n  selectUser = (todoId, userId) => {\n    this.setState({ todoId });\n    this.props.selectUser(userId);\n  }\n\n  handleTodosByTitle = (event) => {\n    this.setState({ filterByTitle: event.target.value });\n  }\n\n  handleTodosByStatus = (event) => {\n    this.setState({ selectedStatus: event.target.value });\n  }\n\n  makeFilteredTodos = todos => todos\n    .filter(todo => todo.title\n      && todo.title.includes(this.state.filterByTitle))\n    .filter((todo) => {\n      switch (this.state.selectedStatus) {\n        case 'completed':\n          return todo.completed;\n        case 'active':\n          return !todo.completed;\n        default:\n          return true;\n      }\n    });\n\n  render() {\n    const { todos } = this.props;\n    const { todoId, selectedStatus, filterByTitle } = this.state;\n    const {\n      selectUser,\n      handleTodosByTitle,\n      handleTodosByStatus,\n      makeFilteredTodos,\n    } = this;\n    const filteredTodos = makeFilteredTodos(todos);\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <form>\n            <label>\n              Find a todo:\n              <input\n                value={filterByTitle}\n                onChange={handleTodosByTitle}\n              />\n            </label>\n            <select\n              value={selectedStatus}\n              onChange={handleTodosByStatus}\n            >\n              <option value=\"all\">\n                All\n              </option>\n              <option value=\"completed\">\n                Completed\n              </option>\n              <option value=\"active\">\n                Active\n              </option>\n            </select>\n          </form>\n          <ul className=\"TodoList__list\">\n            {filteredTodos.map((todo) => {\n              const itemClass = cn('TodoList__item', {\n                'TodoList__item--checked': todo.completed,\n                'TodoList__item--unchecked': !todo.completed,\n              });\n\n              return (\n                <li\n                  key={todo.id}\n                  className={itemClass}\n                >\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      defaultChecked={todo.completed}\n                    />\n                    <p>{todo.title}</p>\n                  </label>\n\n                  <button\n                    onClick={() => selectUser(todo.id, todo.userId)}\n                    className={cn('TodoList__user-button', 'button',\n                      { 'TodoList__user-button--selected':\n                        todo.id === todoId })}\n                    type=\"button\"\n                  >\n                    {`User#${todo.userId}`}\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      userId: PropTypes.number,\n      id: PropTypes.number,\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n    }),\n  ),\n  selectUser: PropTypes.func.isRequired,\n};\n\nTodoList.defaultProps = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: null,\n    completed: false,\n    title: null,\n    userId: null,\n  })),\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const request = url => fetch(`${BASE_URL}${url}`)\n  .then(response => response.json())\n  .then(serverResponse => serverResponse.data)\n  .catch(error => `Ooops, error: ${error}`);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\nimport { request } from '../../api/api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadData();\n    }\n  }\n\n  loadData() {\n    const { userId } = this.props;\n\n    request(`/users/${userId}`)\n      .then(user => this.setState({ user }));\n  }\n\n  render() {\n    const { user } = this.state;\n    const { clearUserInfo } = this.props;\n\n    if (!user) {\n      return (\n        <h2>Loading...</h2>\n      );\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            {`Selected user: ${user.id}`}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.adress}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={() => clearUserInfo()}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUserInfo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { request } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const todos = await request('/todos');\n\n    this.setState({ todos });\n  }\n\n  selectUser = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  }\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n    const { selectUser, clearUser } = this;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectUser={selectUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUserInfo={clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}